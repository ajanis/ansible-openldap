---
- name: Install the openldap client and required Packages for RedHat
  yum:
    name: "{{ openldap_client_pkgs }}"
    state: present
    update_cache: yes
  notify:
    - restart_login_services

- name: Install ansible python dependencies for ldap configuration
  pip:
    name: "{{ item.name }}"
    version: |
      {% if (item.version is defined) and (item.version|length > 0) %}
        {{ item.version }}
      {% else %}
        (omit)
      {% endif %}
    state: |
      {% if (item.state is defined) and (item.state|length > 0) %}"
        {{ item.state }}
      {% else %}
        present
      {% endif %}
  loop: "{{ openldap_python_pkgs }}"
  notify:
    - restart_login_services

- name: Copy /etc/ldap.conf for client
  template:
    src: client_ldap.conf.j2
    dest: /etc/ldap.conf
  notify:
    - restart_login_services
    - restart_ns_daemons

- name: Copy /etc/sssd/sssd.conf for client
  template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: 0600
  notify:
    - restart_login_services
    - restart_ns_daemons
    - restart_sssd
  when:
    - ansible_os_distribution == "RedHat"
    - ansible_distribution_major_version is version('8', '>=')

- name: Copy nsswitch.conf
  template:
    src: nsswitch.conf.j2
    dest: /etc/nsswitch.conf
  notify:
    - restart_ns_daemons
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version is version('8', '>=')

- name: Copy nslcd.conf
  template:
    src: nslcd.conf.j2
    dest: /etc/nslcd.conf
    mode: 0600
  notify:
    - restart_ns_daemons
    - restart_login_services

- name: autofs packages
  yum:
    name: autofs
    state: present
    update_cache: yes
  when:
    - openldap_server_enable_autofs

- name: Start AutoFS service
  service:
    name: autofs
    state: started
    enabled: yes
  when:
    - openldap_server_enable_autofs

- name: Start rpcbind service
  service:
    name: rpcbind
    state: started
    enabled: yes

- name: Copy autofs supporting file
  template:
    src: autofs.j2
    dest: /etc/sysconfig/autofs
    mode: 0755
  notify:
    - restart_autofs
  when:
    - openldap_server_enable_autofs

- meta: flush_handlers

- name: "Run 'authconfig --enableldap --enableldapauth --enablemkhomedir --update'"
  command: "authconfig --enableldap --enableldapauth --enablemkhomedir --update"
  when:
    - run_authconfig | default(False)
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version is version('8', '<')

- name: "Run 'authselect select sssd with-mkhomedir with-pamaccess --force' [RHEL 8]"
  command: "authselect select sssd with-mkhomedir with-pamaccess --force"
  when:
    - run_authconfig | default(False)
    - ansible_os_distribution == "RedHat"
    - ansible_distribution_major_version >= "8"

- name: Authentication workarounds for CentOS 8
  block:
    - name: Disable SSSD
      service:
        name: sssd
        state: stopped
        enabled: no
    - name: Enable and start NSLCD
      service:
        name: nslcd
        state: started
        enabled: yes
    - name: Create custom authselect path for nslcd
      file:
        path: "{{ openldap_authselect_nslcd_path }}"
        state: directory
    - name: Copy default authselect files for sssd
      copy:
        src: "{{ openldap_authselect_sssd_path }}/"
        dest: "{{ openldap_authselect_nslcd_path }}/"
        remote_src: yes
    - name: Update authselect files for ldap
      replace:
        path: "{{ item }}"
        regexp: 'sss'
        replace: 'ldap'
      loop: "{{ openldap_authselect_files }}"
    - name: Update authselect REQUIREMENTS file
      replace:
        path: "{{ openldap_authselect_nslcd_path }}/REQUIREMENTS"
        regexp: 'SSSD'
        replace: 'NSLCD'
    - name: "Run 'authselect select custom/nslcd --force' [CentOS 8]"
      command: "authselect select custom/nslcd --force"
  when:
    - run_authconfig | default(False)
    - ansible_os_distribution == "CentOS"
    - ansible_distribution_major_version >= "8"

- name: create user home directories
  file:
    state: directory
    path: "/home/{{ item.key }}"
    owner: "{{ item.value.uid }}"
    group: "{{ item.value.gid }}"
    mode: 0755
  loop: "{{ ssh_users|default({})|dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when:
    - not openldap_server_enable_autofs
