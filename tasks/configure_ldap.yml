---

- name: copy openssh-lpk schema file
  copy:
    src: openssh-lpk
    dest: "{{ openldap_server_app_path }}/schema/openssh-lpk.schema"
    mode: 0644
  notify: slapd rebuild

- name: copy samba ldap schema file
  copy:
    src: samba.schema
    dest: "{{ openldap_server_app_path }}/schema/samba.schema"
    mode: 0644
  notify: slapd rebuild

- name: Check for ldap root password change
  copy:
    dest: "{{ openldap_server_app_path }}/rootpw_configured"
    content: "{{ openldap_server_rootpw | checksum }}"
  register: rootpw_updated

- name: Generate the root password for ldap
  shell: "slappasswd -s {{ openldap_server_rootpw }}"
  register: root_password
  when: rootpw_updated is changed
  no_log: True

- name: Copy the slapd.conf configuration file for Redhat
  template:
    src: slapd.conf.j2
    dest: "{{ openldap_server_app_path }}/slapd.conf"
  when:
    - ansible_os_family == "RedHat"
    - rootpw_updated is changed
  notify: slapd rebuild

- name: Copy the slapd.conf configuration file for Ubuntu
  template:
    src: slapd.conf_ubuntu.j2
    dest: "{{ openldap_server_app_path }}/slapd.conf"
  when:
    - ansible_os_family == "Debian"
    - rootpw_updated is changed
  notify: slapd rebuild

- name: Copy the ldap.conf configuration file
  template:
    src: ldap.conf.j2
    dest: "{{ openldap_server_app_path }}/ldap.conf"
  notify: restart slapd

- name: Create the directory for ldap database
  file:
    path: "/var/lib/ldap/{{ openldap_server_domain_name }}"
    state: directory
    owner: "{{ openldap_server_user }}"
    group: "{{ openldap_server_user }}"

- name: Create the directory for ldap certificates
  file: 
    path: "{{ openldap_server_app_path }}/certs"
    state: directory
    owner: "{{ openldap_server_user }}"
    group: "{{ openldap_server_user }}"

- name: "[OpenLDAP] :: Install SSL Key"
  copy:
    content: "{{ ssl_privkey }}"
    dest: "{{ ssl_keypath }}"
    owner: root
    group: root
    mode: 0640
  notify:
    - restart slapd

- name: "[OpenLDAP] :: Install SSL Certificate Chain"
  copy:
    content: "{{ ssl_certchain }}"
    dest: "{{ ssl_certpath }}"
    owner: root
    group: root
    mode: 0640
  notify:
    - restart slapd

#- name: Generate the private key for certificate request
#  shell: openssl genrsa -des3 -passout pass:password -out my1.key 1024 chdir={{ openldap_server_app_path }}/certs/
#         creates={{ openldap_server_app_path }}/certs/my1.key

#- name: Strip the passphrase from the key
#  shell: openssl rsa -in my1.key -passin pass:password -out my.key chdir={{ openldap_server_app_path }}/certs/
#         creates={{ openldap_server_app_path }}/certs/my.key

#- name: Create and sign the the new certificate
#  shell: openssl req -new -x509 -subj '/C={{ openldap_server_country }}/ST={{ openldap_server_state }}/L={{ openldap_server_location }}/O={{ openldap_server_organization }}/CN={{ ansible_hostname }}/' -days 3650 -key my.key -out cert.crt -extensions v3_ca chdir={{ openldap_server_app_path }}/certs/   creates={{ openldap_server_app_path }}/certs/cert.crt

- name: copy the supporting files
  copy: src=ldap dest=/etc/sysconfig/ldap mode=0755
  when: openldap_server_enable_ssl and ansible_os_family == 'RedHat'
  notify:
   - restart slapd


- name: copy the supporting files
  copy: src=slapd_fedora dest=/etc/sysconfig/slapd mode=0755
  when: openldap_server_enable_ssl and ansible_distribution == "Fedora"
  notify:
   - restart slapd

- name: copy the supporting files
  copy: src=slapd dest=/etc/default/slapd mode=0755
  when: openldap_server_enable_ssl and ansible_os_family == 'Debian'
  notify:
   - restart slapd


- name: start the slapd service
  service: name=slapd state=restarted enabled=yes

- name: Copy the template for creating base dn
  template: src={{ openldap_server_ldif }} dest=/tmp/
  register: result
  notify:
    - restart slapd

- name: add the base domain
  shell: >
    ldapadd -x -D "cn=Manager,{{ openldap_server_dc }}" -w {{ openldap_server_rootpw }}
    -f {{ result.dest|default(result.path) }} && touch {{ openldap_server_app_path }}/rootdn_created
    creates={{ openldap_server_app_path }}/rootdn_created
