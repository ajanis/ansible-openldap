---

- name: copy openssh-lpk schema file
  copy:
    src: openssh-lpk
    dest: "{{ openldap_server_app_path }}/schema/openssh-lpk.schema"
    mode: 0644
  notify: slapd rebuild

- name: copy samba ldap schema file
  copy:
    src: samba.schema
    dest: "{{ openldap_server_app_path }}/schema/samba.schema"
    mode: 0644
  notify: slapd rebuild

- name: copy autofs schema file
  copy:
    src: autofs.schema
    dest: "{{ openldap_server_app_path }}/schema/autofs.schema"
    mode: 0644
  notify: slapd rebuild

- name: Check for ldap root password change
  copy:
    dest: "{{ openldap_server_app_path }}/rootpw_configured"
    content: "{{ openldap_server_rootpw | checksum }}"
  register: rootpw_updated

- name: Generate the root password for ldap
  shell: "slappasswd -s {{ openldap_server_rootpw }}"
  register: root_password
  when: rootpw_updated is changed
  no_log: True

- name: Copy the slapd.conf configuration file for Redhat
  template:
    src: slapd.conf.j2
    dest: "{{ openldap_server_app_path }}/slapd.conf"
  when:
    - ansible_os_family == "RedHat"
    - rootpw_updated is changed
  notify: slapd rebuild

- name: Copy the slapd.conf configuration file for Ubuntu
  template:
    src: slapd.conf_ubuntu.j2
    dest: "{{ openldap_server_app_path }}/slapd.conf"
  when:
    - ansible_os_family == "Debian"
    - rootpw_updated is changed
  notify: slapd rebuild

- name: Copy the ldap.conf configuration file
  template:
    src: ldap.conf.j2
    dest: "{{ openldap_server_app_path }}/ldap.conf"
  notify: restart slapd

- name: Create the directory for ldap database
  file:
    path: "/var/lib/ldap/{{ openldap_server_domain_name }}"
    state: directory
    owner: "{{ openldap_server_user }}"
    group: "{{ openldap_server_user }}"

#- name: copy DB_CONFIG
#  template:
#    src: db_config.j2
#    dest: "/var/lib/ldap/{{ openldap_server_domain_name }}/DB_CONFIG"
#    mode: 0644
#  notify: slapd rebuild

- name: Create the directory for ldap certificates
  file: 
    path: "{{ openldap_server_app_path }}/certs"
    state: directory
    owner: "{{ openldap_server_user }}"
    group: "{{ openldap_server_user }}"
  when: openldap_server_enable_ssl

- name: "[OpenLDAP] :: Install SSL Key"
  copy:
    content: "{{ ssl_privkey }}"
    dest: "{{ ssl_keypath }}"
    owner: root
    group: root
    mode: 0640
  when: openldap_server_enable_ssl
  notify:
    - restart slapd

- name: "[OpenLDAP] :: Install SSL Certificate Chain"
  copy:
    content: "{{ ssl_certchain }}"
    dest: "{{ ssl_certpath }}"
    owner: root
    group: root
    mode: 0640
  when: openldap_server_enable_ssl
  notify:
    - restart slapd

- name: copy the /etc/default/slapd for RedHat
  copy: src=ldap dest=/etc/sysconfig/ldap mode=0755
  when: openldap_server_enable_ssl and ansible_os_family == 'RedHat'
  notify:
   - restart slapd

- name: copy /etc/default/slapd for Fedora
  copy: src=slapd_fedora dest=/etc/sysconfig/slapd mode=0755
  when: openldap_server_enable_ssl and ansible_distribution == "Fedora"
  notify:
   - restart slapd

- name: copy /etc/default/slapd for Ubuntu
  copy: src=slapd dest=/etc/default/slapd mode=0755
  when: openldap_server_enable_ssl and ansible_os_family == 'Debian'
  notify:
   - restart slapd

- meta: flush_handlers

- name: stop slapd
  service:
    name: slapd
    state: stopped
  when: slapd_rebuild is defined and slapd_rebuild

- name: Delete the configuration directory
  file:
    path: "{{ openldap_server_app_path }}/slapd.d"
    state: absent
  when: slapd_rebuild is defined and slapd_rebuild

- name: Create the configuration directory
  file:
    path: "{{ openldap_server_app_path }}/slapd.d"
    state: directory
    owner: openldap
    group: openldap
  when: slapd_rebuild is defined and slapd_rebuild

- name: Rebuild slapd OLC Directory
  shell: "slaptest -f {{ openldap_server_app_path }}/slapd.conf -F {{ openldap_server_app_path }}/slapd.d"
  when: slapd_rebuild is defined and slapd_rebuild

- name: fix slapd.d permissions
  file:
    path: "{{ openldap_server_app_path }}/slapd.d"
    state: directory
    recurse: yes
    owner: openldap
    group: openldap
  when: slapd_rebuild is defined and slapd_rebuild
   
- name: start slapd
  service:
    name: slapd
    state: started
    enabled: yes
  when: slapd_rebuild is defined and slapd_rebuild

- name: Copy the template for creating base dn
  template: src={{ openldap_server_ldif }} dest=/tmp/
  register: rootdn

- name: add the base domain
  shell: >
    ldapadd -x -D "cn=Manager,{{ openldap_server_dc }}" -w {{ openldap_server_rootpw }}
    -f {{ rootdn.dest|default(rootdn.path) }} && touch {{ openldap_server_app_path }}/rootdn_created
  args:
    creates: "{{ openldap_server_app_path }}/rootdn_created"

- name: Copy the template for creating samba indices
  copy:
    src: samba_indices.ldif
    dest: /tmp/
  register: smbindices

- name: add the samba indices
  shell: >
    ldapmodify -x -D "cn=admin,cn=config" -w {{ openldap_server_rootpw }}
    -f {{ smbindices.dest|default(smbindices.path) }} && touch {{ openldap_server_app_path }}/smbindices_created
  args:
    creates: "{{ openldap_server_app_path }}/smbindices_created"
