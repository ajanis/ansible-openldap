---

- name: Install the openldap and required Packages for RedHat
  yum:
    name: "{{ openldap_server_pkgs }}"
    state: present
  when: ansible_os_family == 'RedHat'


- name: Install the openldap and required Packages for Ubuntu
  apt:
    name: "{{ openldap_server_pkgs }}"
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Install ansible python dependencies for ldap configuration [Debian/Ubuntu]
  pip:
    name: |-
      {{ item.name }}
      {%- if (item.version is defined) and (item.version|length > 0) -%}
        =={{ item.version }}
      {%- endif %}
    state: |-
      {%- if (item.state is defined) and (item.state|length > 0) -%}
        {{ item.state }}
      {%- else -%}
        present
      {%- endif %}
  loop: "{{ openldap_python_pkgs }}"
  notify:
    - restart_login_services
  when:
    - openldap_python_pkgs is defined
    - openldap_python_pkgs|length > 0

#- name: Slurp ssl data from remote host
#  block:
#    - name: slurp latest ssl key contents
#      slurp:
#        src: "{{ ssl_key_slurp_path }}"
#      register: ssl_key_contents
#      delegate_to: "{{ ssl_slurp_remote_host }}"
#      delegate_facts: true
#
#    - name: set encoded ssl key contents as fact for later processing
#      set_fact:
#        encoded_ssl_key: "{{ ssl_key_contents['content'] }}"
#
#    - name: slurp latest ssl certificate chain contents
#      slurp:
#        src: "{{ ssl_cert_slurp_path }}"
#      register: ssl_cert_contents
#      delegate_to: "{{ ssl_slurp_remote_host }}"
#      delegate_facts: true
#
#    - name: set encoded ssl cert contents as fact for later processing
#      set_fact:
#        encoded_ssl_cert: "{{ ssl_cert_contents['content'] }}"
#
#    - name: set decoded ssl key and cert chain as fact for future tasks
#      set_fact:
#        ssl_privkey: "{{ encoded_ssl_key | b64decode }}"
#        ssl_certchain: "{{ encoded_ssl_cert | b64decode }}"
#
#    - name: print decoded ssl key and certificate chain for debugging
#      debug:
#        msg: |
#          SSL private key: {{ ssl_privkey }}
#          SSL certificate chain: {{ ssl_certchain }}
#        verbosity: 1
#
#    - name: Create the directory for ldap certificates
#      file:
#        path: "{{ openldap_server_app_path }}/certs"
#        state: directory
#        owner: "{{ openldap_server_user }}"
#        group: "{{ openldap_server_user }}"
#
#
#    - name: "Install SSL Key"
#      copy:
#        content: "{{ ssl_privkey }}"
#        dest: "{{ ssl_keypath }}"
#        owner: "{{ openldap_server_user }}"
#        group: "{{ openldap_server_group }}"
#        mode: 0600
#
#
#    - name: "Install SSL Certificate Chain"
#      copy:
#        content: "{{ ssl_certchain }}"
#        dest: "{{ ssl_certpath }}"
#        owner: "{{ openldap_server_user }}"
#        group: "{{ openldap_server_group }}"
#        mode: 0640
#
#  when:
#    - openldap_server_enable_ssl
#    - slurp_ssl_keys_from_remote|default(False)
#    - ssl_slurp_remote_host|length > 0
#    - ssl_cert_slurp_path|length > 0
#    - ssl_key_slurp_path|length > 0
#  tags:
#    - openldap-ssl
