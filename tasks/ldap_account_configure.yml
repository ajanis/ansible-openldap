---
- name: Users OU
  community.general.ldap_entry:
    server_uri: '{{ openldap_server_uri }}'
    bind_dn: "{{ openldap_server_bind_dn }}"
    bind_pw: "{{ openldap_server_rootpw }}"
    dn: "{{ users_ou }}"
    objectClass: organizationalUnit
    state: present
  notify:
    - restart_ns_daemons

- name: Groups OU
  community.general.ldap_entry:
    server_uri: '{{ openldap_server_uri }}'
    bind_dn: "{{ openldap_server_bind_dn }}"
    bind_pw: "{{ openldap_server_rootpw }}"
    dn: "{{ groups_ou }}"
    objectClass: organizationalUnit
    state: present
  notify:
    - restart_ns_daemons

- name: Create Groups
  community.general.ldap_entry:
    server_uri: '{{ openldap_server_uri }}'
    bind_dn: "{{ openldap_server_bind_dn }}"
    bind_pw: "{{ openldap_server_rootpw }}"
    dn: "cn={{ item.key }},{{ groups_ou }}"
    objectClass:
      - posixGroup
      - top
    attributes:
      description: "{{ item.value.description }}"
      gidNumber: "{{ item.value.gid }}"
    state: present
  notify:
    - restart_ns_daemons
  loop: "{{ ssh_groups | default({}) | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Set Group Membership
  community.general.ldap_attrs:
    bind_dn: "{{ openldap_server_bind_dn }}"
    bind_pw: "{{ openldap_server_rootpw }}"
    dn: "cn={{ item.key }},{{ groups_ou }}"
    attributes:
      memberUid: "{{ item.value.members }}"
    state: exact
  notify:
    - restart_ns_daemons
  loop: "{{ ssh_groups | default({}) | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: "Set up SSH users"
  community.general.ldap_entry:
    server_uri: '{{ openldap_server_uri }}'
    bind_dn: "{{ openldap_server_bind_dn }}"
    bind_pw: "{{ openldap_server_rootpw }}"
    dn: "uid={{ item.key }},{{ users_ou }}"
    objectClass:
      - top
      - posixAccount
      - person
      - inetOrgPerson
      - shadowAccount
      - ldapPublicKey
    attributes:
      gidNumber: "{{ item.value.gid | default(omit) }}"
      uidNumber: "{{ item.value.uid | default(omit) }}"
      homeDirectory: "/home/{{ item.key }}"
      loginShell: "{{ item.value.shell | default('/bin/bash') }}"
      givenName: "{{ item.value.givenname | default(omit) }}"
      sn: "{{ item.value.sn | default(omit) }}"
      mail: "{{ item.value.mail | default(omit) }}"
      gecos: "{{ item.value.gecos | default(item.key) }}"
      userPassword: "{{ item.value.password | default('please_change_password') }}"
      cn: "{{ item.value.cn | default(item.key) }}"
      sshPublicKey: |
        {% if (user.value.pubkey | default([])) | length >= 1 %}{% for key in user.value.pubkey %}
        {{ key }}
        {% endfor %}
        {% endif %}
    state: "{{ item.value.state }}"
  loop: "{{ ssh_users | default({}) | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  register: ssh_users_added
  notify:
    - restart_ns_daemons

#

- meta: flush_handlers
